apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "fullname" . }}-data
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    component: {{ template "fullname" . }}
    role: data
spec:
  serviceName: {{ template "fullname" . }}-data
  replicas: {{ .Values.data.replicas }}
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        component: {{ template "fullname" . }}
        role: data
    spec:
      serviceAccountName: {{ template "fullname" . }}
      {{- if eq .Values.data.antiAffinity "hard" }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  component: {{ template "fullname" . }}
                  role: data
      {{- else if eq .Values.data.antiAffinity "soft" }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  component: {{ template "fullname" . }}
                  role: data
      {{- end }}
      initContainers:
      - name: init-sysctl
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      containers:
      - name: elasticsearch
        image: "{{ .Values.common.image.repository }}:{{ .Values.common.image.tag }}"
        imagePullPolicy: {{ .Values.common.image.pullPolicy }}
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
              - SYS_RESOURCE
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DISCOVERY_SERVICE
          value: {{ template "fullname" . }}-discovery
        - name: ES_JAVA_OPTS
          value: "-Djava.net.preferIPv4Stack=true -Xms{{ .Values.data.heapSize }} -Xmx{{ .Values.data.heapSize }}"
        - name: NODE_DATA
          value: "true"
        - name: NODE_MASTER
          value: "false"
        - name: NODE_INGEST
          value: "false"
        - name: HTTP_ENABLE
          value: "{{ .Values.data.enableHTTP }}"
        - name: PROCESSORS
          value: "{{ .Values.data.processors }}"
        {{- range $key, $value :=  .Values.common.env }}
        - name: {{ $key | upper | replace "-" "_" }}
          value: {{ $value | quote }}
        {{- end }}
        {{- range $key, $value :=  .Values.data.env }}
        - name: {{ $key | upper | replace "-" "_" }}
          value: {{ $value | quote }}
        {{- end }}
        ports:
        - containerPort: 9300
          name: transport
          protocol: TCP
        {{- if .Values.data.enableHTTP }}
        - containerPort: 9200
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /_cluster/health?local=true
            port: http
        {{- else }}
        readinessProbe:
          tcpSocket:
            port: transport
        {{- end }}
          initialDelaySeconds: 20
          periodSeconds: 5
          failureThreshold: 20
        livenessProbe:
          tcpSocket:
            port: transport
          initialDelaySeconds: 60
          periodSeconds: 10
        volumeMounts:
        - mountPath: /data
          name: storage
        - mountPath: /elasticsearch/config/elasticsearch.yml
          name: config
          subPath: elasticsearch.yml
      volumes:
        - configMap:
            name: {{ template "fullname" . }}-config
          name: config
  volumeClaimTemplates:
  - metadata:
      name: storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.data.storageClass }}
      resources:
        requests:
          storage: {{ .Values.data.storage }}
