common:
  image:
    repository: quay.io/pires/docker-elasticsearch-kubernetes
    tag: 5.6.3
    pullPolicy: Always

  # Defines the service type for all outward-facing (non-discovery) services.
  serviceType: ClusterIP
  # Any extra or specific configuration that is needed can be added here.
  config:
    index.codec: best_compression

  env:
    CLUSTER_NAME: "elasticsearch"
    # Uncomment this if you get the "No up-and-running site-local (private)
    # addresses" error.
    # NETWORK_HOST: "_eth0_"

# Client/ingest nodes can execute pre-processing pipelines, composed of
# one or more ingest processors. Depending on the type of operations performed
# by the ingest processors and the required resources, it may make sense to
# have dedicated ingest nodes, that will only perform this specific task.
client:
  # It isn't common to need more than 2 client nodes.
  replicas: 2
  antiAffinity: "soft"
  heapSize: 256m
  # More info on what this setting does is in the config map. Only change this
  # if you set the cpu limit to over 1 full cpu.
  processors: 1
  resources:
    limits:
      cpu: 200m
      memory: 384Mi
    requests:
      cpu: 100m
      memory: 256Mi

# Data nodes hold the shards that contain the documents you have indexed. Data
# nodes handle data related operations like CRUD, search, and aggregations.
# These operations are I/O-, memory-, and CPU-intensive. It is important to
# monitor these resources and to add more data nodes if they are overloaded.
#
# The main benefit of having dedicated data nodes is the separation of the
# master and data roles.
data:
  # This count will depend on your data and computation needs.
  replicas: 2
  antiAffinity: "soft"
  storage: 12Gi
  storageClass: "default"
  heapSize: 256m
  enableHTTP: false
  # More info on what this setting does is in the config map. Only change this
  # if you set the cpu limit to over 1 full cpu.
  processors: 1
  resources:
    limits:
      cpu: 200m
      memory: 384Mi
    requests:
      cpu: 100m
      memory: 256Mi

# The master node is responsible for lightweight cluster-wide actions such as
# creating or deleting an index, tracking which nodes are part of the
# cluster, and deciding which shards to allocate to which nodes. It is
# important for cluster health to have a stable master node.
master:
  # Master replica count should be (#clients / 2) + 1, and generally at least 3.
  replicas: 3
  antiAffinity: "soft"
  storage: 2Gi
  storageClass: "default"
  heapSize: 256m
  enableHTTP: false
  # More info on what this setting does is in the config map. Only change this
  # if you set the cpu limit to over 1 full cpu.
  processors: 1
  env:
    # The minimum number of masters that will be able to form a quorum. This
    # should be (#masters / 2) + 1. Default is 2.
    NUMBER_OF_MASTERS: "2"
  resources:
    limits:
      cpu: 200m
      memory: 384Mi
    requests:
      cpu: 100m
      memory: 256Mi

curator:
  enabled: true
  schedule: "0 1 * * *"
  # Allows modification of the default age-based filter. If you require more
  # sophisticated filtering, modify the action file specified in
  # templates/es-curator-config.yaml.
  age:
    timestring: "%Y.%m.%d"
    unit: "days"
    unit_count: 3

service:
  httpPort: 9200
  transportPort: 9300
